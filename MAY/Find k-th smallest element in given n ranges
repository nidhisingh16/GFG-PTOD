
from typing import List

class Solution:
    def merge(self, intervals):
        intervals.sort()
        
        v = intervals[0]
        ans = []
        for i in range(1, len(intervals)):
            if v[1] >= intervals[i][0]:
                v[1] = max(v[1], intervals[i][1])
            else:
                ans.append(v)
                v = intervals[i]
        ans.append(v)
        return ans
    
    def find_kth(self, merged, k):
        n = len(merged)
        for j in range(n):
            if k <= abs(merged[j][1] - merged[j][0] + 1):
                return merged[j][0] + k - 1
 
            k = k - abs(merged[j][1] - merged[j][0] + 1)
        
        if k:
            return -1
    
    def kthSmallestNum(self, n : int, ranges : List[List[int]], q : int, queries : List[int]) -> List[int]:
        merged = self.merge(ranges)
        ans = []
        for i in range(len(queries)):
            res = self.find_kth(merged, queries[i])
            ans.append(res)
        return ans
